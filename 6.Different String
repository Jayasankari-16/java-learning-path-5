/* You are given N binary strings of length N each.
You need to find a binary string of length N which is different from all of the given strings.
Note:A binary string is defined as a string consisting only of '0' and '1'.
A string is considered different from another string when they have different lengths, or when they differ in at least one position.*/

import java.util.*;
import java.lang.*;
import java.io.*;

class Main{
    public static void main (String[] args) throws java.lang.Exception {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        for (int i = 0; i < t; i++) {
            int n = sc.nextInt();
            int[] arr = new int[n];
            Map<Integer, Integer> mpp = new HashMap<>();
            
            for (int p = 0; p < n; p++) {
                String s = sc.next();
                for (int l = 0; l < n; l++) {
                    if (s.charAt(n - 1 - l) == '1') {
                        arr[p] += (1 << l);  // Convert binary string to int (LSB on right)
                    }
                }
                mpp.put(arr[p], 1);  // Store in map
            }
        Arrays.sort(arr);
            int ans = -1;
            int max = Integer.MIN_VALUE;
            int min = Integer.MAX_VALUE;

            for (int r : arr) {
                if (!mpp.containsKey(r + 1)) {
                    ans = r + 1;
                    break;
                } else {
                    max = Math.max(max, r);
                    min = Math.min(min, r);
                }
            }
            if (ans == -1) {
                if (max + 1 != (1 << n)) {
                    ans = max + 1;
                } else if (min != 0 && !mpp.containsKey(min - 1)) {
                    ans = min - 1;
                }
            }
            StringBuilder s = new StringBuilder();
            for (int h = n - 1; h >= 0; h--) {
                if (((ans >> h) & 1) != 0) s.append("1");
                else s.append("0");
            }
            System.out.println(s.toString());
        }
    }
}
